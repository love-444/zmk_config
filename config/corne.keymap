/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

&mt {
        tapping-term-ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        combos {
                compatible = "zmk,combos";
                combo_del {
                        timeout-ms = <50>;
                        key-positions = <1 13>;
                        bindings = <&kp LGUI>;
                };
                combo_gui {
                        timeout-ms = <50>;
                        key-positions = <10 22>;
                        bindings = <&kp DEL>;
                };
                combo_num {
                        timeout-ms = <50>;
                        key-positions = <38 39>;
                        bindings = <&mo 1>;
                };
                combo_sym {
                        timeout-ms = <50>;
                        key-positions = <37 40>;
                        bindings = <&mo 2>;
                };
                combo_fun {
                        timeout-ms = <50>;
                        key-positions = <36 41 >;
                        bindings = <&mo 3>;
                };
        };

        keymap {
                 compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | ALT | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T                   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G                   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
   &hm LALT ESC &hm LCTRL TAB &kp SPACE            &hm RSHIFT RET &kp BSPC &hm LALT RA(GRAVE)
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |PSCRN| HOM | PUP | PUD | END |   | LFT | DWN |  UP | RGT |  `  |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | GUI |
                        bindings = <
   &trans  &kp N1    &kp N2   &kp N3    &kp N4    &kp N5      &kp N6   &kp N7   &kp N8 &kp N9    &kp N0    &trans
   &trans  &kp PSCRN &kp HOME &kp PG_UP &kp PG_DN &kp END     &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp RCTRL &trans
   &trans  &trans    &trans   &trans    &trans    &trans      &trans   &trans   &trans &trans    &trans   &trans
                              &trans    &trans    &trans      &trans   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL | PRV | MUT | PLY | NXT | VOU |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     | VOD |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | GUI |
                        bindings = <
   &trans &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans &kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &kp SQT         &kp SQT   &kp RPAR  &kp RBRC        &kp RBKT &kp DQT  &trans
   &trans &kp GRAVE &kp TILDE &kp UNDER &kp MINUS &none           &none     &kp EQUAL &kp PLUS        &kp PIPE &kp BSLH &trans
                                &kp LGUI &trans   &trans      &trans    &trans    &kp RGUI
                        >;
                };

                super_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | F12 |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   |     | RON | HUI | SAI | BRI |     |
// |      | USB | BLE |     |     | CLR |   |     | ROF | HUD | SAD | BRD |     |
//                    |     |     |     |   |     |     |    |
                        bindings = <
   &trans   &kp F2       &kp F3       &kp F4       &kp F5       &kp F6              &kp F7       &kp F8       &kp F9       &kp F10      &kp F11    &trans
   &trans   &kp F1       &kp C_PREV   &kp C_MUTE   &kp C_PP     &kp C_NEXT          &kp C_BRI_DN &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_UP &kp F12    &trans
   &trans   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &none        &none        &none        &out OUT_TOG &bt BT_CLR &trans
                                      &trans     &trans       &trans           &trans  &trans &trans
                        >;
                };
        };
};
